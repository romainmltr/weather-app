{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Welcome to My Weather App\", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 1\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Loading...\", -1 /* HOISTED */);\nconst _hoisted_5 = [_hoisted_4];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, $data.weatherData ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"h2\", null, _toDisplayString($data.weatherData.location.name), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Temperature: \" + _toDisplayString($data.weatherData.current.temp_c) + \"°C\", 1 /* TEXT */), _createElementVNode(\"p\", null, \"Humidity: \" + _toDisplayString($data.weatherData.current.humidity) + \"%\", 1 /* TEXT */)])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _hoisted_5))]);\n}","map":{"version":3,"names":["_createElementVNode","_hoisted_4","_createElementBlock","_hoisted_1","$data","weatherData","_hoisted_2","_toDisplayString","location","name","current","temp_c","humidity","_hoisted_3","_hoisted_5"],"sources":["/Users/romain/Documents/Perso/Dev/weather-app/src/components/HeroHome.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>Welcome to My Weather App</h1>\n    <div v-if=\"weatherData\">\n      <h2>{{ weatherData.location.name }}</h2>\n      <p>Temperature: {{ weatherData.current.temp_c }}°C</p>\n      <p>Humidity: {{ weatherData.current.humidity }}%</p>\n    </div>\n    <div v-else>\n      <p>Loading...</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport WeatherService from '../services/weatherService.js';\n\nexport default {\n  data() {\n    return {\n      weatherData: null,\n      city: 'Paris'\n    };\n  },\n  mounted() {\n    this.getWeatherByCity();\n  },\n  methods: {\n    async getWeatherByCity() {\n      try {\n        const response = await WeatherService.getWeatherByCity(this.city);\n        this.weatherData = response.data;\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  }\n};\n</script>\n"],"mappings":";gCAEIA,mBAAA,CAAkC,YAA9B,2BAAyB;;;;;;;gCAO3BA,mBAAA,CAAiB,WAAd,YAAU;oBAAbC,UAAiB,C;;uBARrBC,mBAAA,CAUM,cATJC,UAAkC,EACvBC,KAAA,CAAAC,WAAW,I,cAAtBH,mBAAA,CAIM,OAAAI,UAAA,GAHJN,mBAAA,CAAwC,YAAAO,gBAAA,CAAjCH,KAAA,CAAAC,WAAW,CAACG,QAAQ,CAACC,IAAI,kBAChCT,mBAAA,CAAsD,WAAnD,eAAa,GAAAO,gBAAA,CAAGH,KAAA,CAAAC,WAAW,CAACK,OAAO,CAACC,MAAM,IAAG,IAAE,iBAClDX,mBAAA,CAAoD,WAAjD,YAAU,GAAAO,gBAAA,CAAGH,KAAA,CAAAC,WAAW,CAACK,OAAO,CAACE,QAAQ,IAAG,GAAC,gB,oBAElDV,mBAAA,CAEM,OAAAW,UAAA,EAAAC,UAAA,G"},"metadata":{},"sourceType":"module","externalDependencies":[]}