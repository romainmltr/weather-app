{"ast":null,"code":"import WeatherService from '../services/weatherService.js';\nimport SearchBar from './SearchBar.vue';\nexport default {\n  components: {\n    SearchBar\n  },\n  data() {\n    return {\n      weatherData: null,\n      city: 'Paris'\n    };\n  },\n  mounted() {\n    this.getWeatherByCity();\n  },\n  methods: {\n    async getWeatherByCity() {\n      try {\n        const response = await WeatherService.getWeatherByCity(this.city);\n        this.weatherData = response.data;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    getWeatherIconUrl(code) {\n      return require(`@/assets/weather-icons/${code}.png`);\n    },\n    handleSearch(city) {\n      this.city = city;\n      this.getWeatherByCity();\n      this.$emit('search', city);\n    }\n  }\n};","map":{"version":3,"names":["WeatherService","SearchBar","components","data","weatherData","city","mounted","getWeatherByCity","methods","response","error","console","getWeatherIconUrl","code","require","handleSearch","$emit"],"sources":["/Users/romain/Documents/Perso/Dev/weather-app/src/components/HeroHome.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"glass-container\">\n        <h1>Welcome to My Weather App</h1>\n        <SearchBar @search=\"handleSearch\"></SearchBar>\n          <div v-if=\"weatherData\">\n            <h2>{{ weatherData.location.name }}</h2>\n            <p>Temperature: {{ weatherData.current.temp_c }}Â°C</p>\n            <p>Humidity: {{ weatherData.current.humidity }}%</p>\n            <img :src=\"getWeatherIconUrl(weatherData.current.condition.code)\" alt=\"Weather Icon\">\n          </div>\n          <div v-else>\n            <p>Loading...</p>\n          </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport WeatherService from '../services/weatherService.js';\nimport SearchBar from './SearchBar.vue';\n\nexport default {\n  components: {\n    SearchBar\n  },\n  data() {\n    return {\n      weatherData: null,\n      city: 'Paris'\n    };\n  },\n  mounted() {\n    this.getWeatherByCity();\n  },\n  methods: {\n    async getWeatherByCity() {\n      try {\n        const response = await WeatherService.getWeatherByCity(this.city);\n        this.weatherData = response.data;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    getWeatherIconUrl(code) {\n      return require(`@/assets/weather-icons/${code}.png`);\n    },\n    handleSearch(city) {\n      this.city = city;\n      this.getWeatherByCity();\n      this.$emit('search', city);\n    }\n  }\n};\n</script>\n\n\n<style scoped>\n.glass-container {\n  background: rgba( 255, 255, 255, 0.65 );\n  box-shadow: 0 8px 32px 0 rgba( 31, 38, 135, 0.37 );\n  backdrop-filter: blur( 11px );\n  -webkit-backdrop-filter: blur( 11px );\n  border-radius: 10px;\n  border: 1px solid rgba( 255, 255, 255, 0.18 );\n}\n\n\n</style>\n"],"mappings":"AAmBA,OAAOA,cAAa,MAAO,+BAA+B;AAC1D,OAAOC,SAAQ,MAAO,iBAAiB;AAEvC,eAAe;EACbC,UAAU,EAAE;IACVD;EACF,CAAC;EACDE,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,IAAI;MACjBC,IAAI,EAAE;IACR,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,gBAAgB,CAAC,CAAC;EACzB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,gBAAgBA,CAAA,EAAG;MACvB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMT,cAAc,CAACO,gBAAgB,CAAC,IAAI,CAACF,IAAI,CAAC;QACjE,IAAI,CAACD,WAAU,GAAIK,QAAQ,CAACN,IAAI;MAClC,EAAE,OAAOO,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IACDE,iBAAiBA,CAACC,IAAI,EAAE;MACtB,OAAOC,OAAO,CAAE,0BAAyBD,IAAK,MAAK,CAAC;IACtD,CAAC;IACDE,YAAYA,CAACV,IAAI,EAAE;MACjB,IAAI,CAACA,IAAG,GAAIA,IAAI;MAChB,IAAI,CAACE,gBAAgB,CAAC,CAAC;MACvB,IAAI,CAACS,KAAK,CAAC,QAAQ,EAAEX,IAAI,CAAC;IAC5B;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}