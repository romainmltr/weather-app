{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-f424d8ce\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = {\n  class: \"text-2xl font-semibold mb-4\"\n};\nconst _hoisted_3 = {\n  class: \"carousel-container w-full flex-wrap\"\n};\nconst _hoisted_4 = {\n  class: \"text-lg font-medium\"\n};\nconst _hoisted_5 = [\"src\"];\nconst _hoisted_6 = {\n  key: 1\n};\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Loading...\", -1 /* HOISTED */));\nconst _hoisted_8 = [_hoisted_7];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [$data.data ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h2\", _hoisted_2, _toDisplayString($data.data.location.name), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.data.forecast.forecastday, forecastDay => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: forecastDay.date,\n      class: \"carousel-item\"\n    }, [_createElementVNode(\"h3\", _hoisted_4, _toDisplayString(forecastDay.date.slice(8)), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Average Temperature: \" + _toDisplayString(forecastDay.day.avgtemp_c) + \"°C\", 1 /* TEXT */), _createElementVNode(\"p\", null, \"Chance of Rain: \" + _toDisplayString(forecastDay.day.daily_chance_of_rain) + \"%\", 1 /* TEXT */), _createElementVNode(\"img\", {\n      src: $options.getWeatherIconUrl(_ctx.weatherData.current.condition.code),\n      alt: \"Weather Icon\",\n      class: \"weather-icon\"\n    }, null, 8 /* PROPS */, _hoisted_5)]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_6, _hoisted_8))]);\n}","map":{"version":3,"names":["class","_createElementVNode","_hoisted_7","_createElementBlock","$data","data","_hoisted_1","_hoisted_2","_toDisplayString","location","name","_hoisted_3","_Fragment","_renderList","forecast","forecastday","forecastDay","key","date","_hoisted_4","slice","day","avgtemp_c","daily_chance_of_rain","src","$options","getWeatherIconUrl","_ctx","weatherData","current","condition","code","alt","_hoisted_6","_hoisted_8"],"sources":["/Users/romain/Documents/Perso/Dev/weather-app/src/components/GetWeatherCityFutur.vue"],"sourcesContent":["<template>\n  <div>\n    <div v-if=\"data\">\n      <h2 class=\"text-2xl font-semibold mb-4\">{{ data.location.name }}</h2>\n      <div class=\"carousel-container w-full flex-wrap \">\n        <div v-for=\"forecastDay in data.forecast.forecastday\" :key=\"forecastDay.date\" class=\"carousel-item\">\n          <h3 class=\"text-lg font-medium\">{{ forecastDay.date.slice(8) }}</h3>\n          <p>Average Temperature: {{ forecastDay.day.avgtemp_c }}°C</p>\n          <p>Chance of Rain: {{ forecastDay.day.daily_chance_of_rain }}%</p>\n\n          <img :src=\"getWeatherIconUrl(weatherData.current.condition.code)\" alt=\"Weather Icon\" class=\"weather-icon\">\n        </div>\n      </div>\n    </div>\n    <div v-else>\n      <p>Loading...</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport WeatherService from '../services/weatherService.js';\n\nexport default {\n  props: {\n    city: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      data: null\n    };\n  },\n  watch: {\n    city: {\n      immediate: true,\n      handler(newCity) {\n        this.getWeatherForecast(newCity);\n      }\n    }\n  },\n  methods: {\n    async getWeatherForecast(city) {\n      try {\n        const response = await WeatherService.getForecastByCity(city, 3);\n        this.data = response.data;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    \n    getWeatherIconUrl(code) {\n      return require(`@/assets/weather-icons/${code}.png`);\n    },\n  }\n};\n</script>\n\n<style scoped>\n.carousel-container {\n  display: flex;\n  gap: 1rem;\n}\n\n.carousel-item {\n  background-color: rgba(255, 255, 255, 0.2);\n  box-shadow: 0 8px 16px 0 rgba(31, 38, 135, 0.37);\n  border-radius: 10px;\n  padding: 1rem;\n  width: 200px;\n}\n\n.carousel-item h3 {\n  font-size: 1.2rem;\n  margin-bottom: 0.5rem;\n}\n\n.carousel-item p {\n  margin-bottom: 0.3rem;\n}\n</style>\n"],"mappings":";;;;;;EAGUA,KAAK,EAAC;AAA6B;;EAClCA,KAAK,EAAC;AAAsC;;EAEzCA,KAAK,EAAC;AAAqB;;;;;gEASnCC,mBAAA,CAAiB,WAAd,YAAU;oBAAbC,UAAiB,C;;uBAdrBC,mBAAA,CAgBM,cAfOC,KAAA,CAAAC,IAAI,I,cAAfF,mBAAA,CAWM,OAAAG,UAAA,GAVJL,mBAAA,CAAqE,MAArEM,UAAqE,EAAAC,gBAAA,CAA1BJ,KAAA,CAAAC,IAAI,CAACI,QAAQ,CAACC,IAAI,kBAC7DT,mBAAA,CAQM,OARNU,UAQM,I,kBAPJR,mBAAA,CAMMS,SAAA,QAAAC,WAAA,CANqBT,KAAA,CAAAC,IAAI,CAACS,QAAQ,CAACC,WAAW,EAAxCC,WAAW;yBAAvBb,mBAAA,CAMM;MANiDc,GAAG,EAAED,WAAW,CAACE,IAAI;MAAElB,KAAK,EAAC;QAClFC,mBAAA,CAAoE,MAApEkB,UAAoE,EAAAX,gBAAA,CAAjCQ,WAAW,CAACE,IAAI,CAACE,KAAK,qBACzDnB,mBAAA,CAA6D,WAA1D,uBAAqB,GAAAO,gBAAA,CAAGQ,WAAW,CAACK,GAAG,CAACC,SAAS,IAAG,IAAE,iBACzDrB,mBAAA,CAAkE,WAA/D,kBAAgB,GAAAO,gBAAA,CAAGQ,WAAW,CAACK,GAAG,CAACE,oBAAoB,IAAG,GAAC,iBAE9DtB,mBAAA,CAA0G;MAApGuB,GAAG,EAAEC,QAAA,CAAAC,iBAAiB,CAACC,IAAA,CAAAC,WAAW,CAACC,OAAO,CAACC,SAAS,CAACC,IAAI;MAAGC,GAAG,EAAC,cAAc;MAAChC,KAAK,EAAC;;uDAIjGG,mBAAA,CAEM,OAAA8B,UAAA,EAAAC,UAAA,G"},"metadata":{},"sourceType":"module","externalDependencies":[]}