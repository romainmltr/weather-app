{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport WeatherService from '../services/weatherService.js';\nexport default {\n  data() {\n    return {\n      data: null\n    };\n  },\n  mounted() {\n    this.getWeatherForecast();\n  },\n  methods: {\n    async getWeatherForecast() {\n      try {\n        const currentDate = new Date();\n        const forecastDates = [];\n        for (let i = 1; i <= 14; i++) {\n          const nextDate = new Date(currentDate.getTime() + i * 24 * 60 * 60 * 1000);\n          const formattedDate = nextDate.toISOString().split('T')[0];\n          forecastDates.push(formattedDate);\n        }\n        const forecastPromises = forecastDates.map(date => WeatherService.getForecastByCity('Paris', date));\n        const forecastResponses = await Promise.all(forecastPromises);\n        this.data = forecastResponses.map(response => response.data);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["WeatherService","data","mounted","getWeatherForecast","methods","currentDate","Date","forecastDates","i","nextDate","getTime","formattedDate","toISOString","split","push","forecastPromises","map","date","getForecastByCity","forecastResponses","Promise","all","response","error","console"],"sources":["/Users/romain/Documents/Perso/Dev/weather-app/src/components/GetWeatherCity.vue"],"sourcesContent":["<template>\n  <div>\n    <div v-if=\"data\">\n      <h2>{{ data.location.name }}</h2>\n      <div v-for=\"forecastDay in data.forecast.forecastday\" :key=\"forecastDay.date\">\n        <h3>{{ forecastDay.date }}</h3>\n        <p>Max Temperature: {{ forecastDay.day.maxtemp_c }}°C</p>\n        <p>Min Temperature: {{ forecastDay.day.mintemp_c }}°C</p>\n        <p>Average Temperature: {{ forecastDay.day.avgtemp_c }}°C</p>\n        <p>Max Wind Speed: {{ forecastDay.day.maxwind_kph }} km/h</p>\n        <p>Precipitation: {{ forecastDay.day.totalprecip_mm }} mm</p>\n        <p>Humidity: {{ forecastDay.day.avghumidity }}%</p>\n      </div>\n    </div>\n    <div v-else>\n      <p>Loading...</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport WeatherService from '../services/weatherService.js';\n\nexport default {\n  data() {\n    return {\n      data: null,\n    };\n  },\n  mounted() {\n    this.getWeatherForecast();\n  },\n  methods: {\n    async getWeatherForecast() {\n      try {\n        const currentDate = new Date();\n        const forecastDates = [];\n        for (let i = 1; i <= 14; i++) {\n          const nextDate = new Date(currentDate.getTime() + i * 24 * 60 * 60 * 1000);\n          const formattedDate = nextDate.toISOString().split('T')[0];\n          forecastDates.push(formattedDate);\n        }\n        const forecastPromises = forecastDates.map(date => WeatherService.getForecastByCity('Paris', date));\n        const forecastResponses = await Promise.all(forecastPromises);\n        this.data = forecastResponses.map(response => response.data);\n      } catch (error) {\n        console.error(error);\n      }\n    },\n  },\n};\n</script>\n"],"mappings":";AAqBA,OAAOA,cAAa,MAAO,+BAA+B;AAE1D,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLA,IAAI,EAAE;IACR,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,kBAAkB,CAAC,CAAC;EAC3B,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,kBAAkBA,CAAA,EAAG;MACzB,IAAI;QACF,MAAME,WAAU,GAAI,IAAIC,IAAI,CAAC,CAAC;QAC9B,MAAMC,aAAY,GAAI,EAAE;QACxB,KAAK,IAAIC,CAAA,GAAI,CAAC,EAAEA,CAAA,IAAK,EAAE,EAAEA,CAAC,EAAE,EAAE;UAC5B,MAAMC,QAAO,GAAI,IAAIH,IAAI,CAACD,WAAW,CAACK,OAAO,CAAC,IAAIF,CAAA,GAAI,EAAC,GAAI,EAAC,GAAI,EAAC,GAAI,IAAI,CAAC;UAC1E,MAAMG,aAAY,GAAIF,QAAQ,CAACG,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;UAC1DN,aAAa,CAACO,IAAI,CAACH,aAAa,CAAC;QACnC;QACA,MAAMI,gBAAe,GAAIR,aAAa,CAACS,GAAG,CAACC,IAAG,IAAKjB,cAAc,CAACkB,iBAAiB,CAAC,OAAO,EAAED,IAAI,CAAC,CAAC;QACnG,MAAME,iBAAgB,GAAI,MAAMC,OAAO,CAACC,GAAG,CAACN,gBAAgB,CAAC;QAC7D,IAAI,CAACd,IAAG,GAAIkB,iBAAiB,CAACH,GAAG,CAACM,QAAO,IAAKA,QAAQ,CAACrB,IAAI,CAAC;MAC9D,EAAE,OAAOsB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}