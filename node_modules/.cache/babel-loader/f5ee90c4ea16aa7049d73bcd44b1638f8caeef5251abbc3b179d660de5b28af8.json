{"ast":null,"code":"import WeatherService from '../services/weatherService.js';\nimport SearchBar from './SearchBar.vue';\nexport default {\n  components: {\n    SearchBar\n  },\n  data() {\n    return {\n      weatherData: null,\n      city: 'Paris'\n    };\n  },\n  mounted() {\n    this.getWeatherByCity();\n  },\n  methods: {\n    async getWeatherByCity() {\n      try {\n        const response = await WeatherService.getWeatherByCity(this.city);\n        this.weatherData = response.data;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    getWeatherIconUrl(code) {\n      return require(`@/assets/weather-icons/${code}.png`);\n    },\n    handleSearch(city) {\n      this.city = city;\n      this.getWeatherByCity();\n      this.$emit('search', city);\n    },\n    getEmojiIcon(type) {\n      let icon = '';\n      switch (type) {\n        case 'humidity':\n          icon = 'üåßÔ∏è';\n          break;\n        case 'wind':\n          icon = 'üå¨Ô∏è';\n          break;\n        case 'precipitation':\n          icon = 'üí¶';\n          break;\n        case 'pressure':\n          icon = 'üå°Ô∏è';\n          break;\n        case 'uv':\n          icon = '‚òÄÔ∏è';\n          break;\n        default:\n          icon = '';\n      }\n      return icon;\n    }\n  }\n};","map":{"version":3,"names":["WeatherService","SearchBar","components","data","weatherData","city","mounted","getWeatherByCity","methods","response","error","console","getWeatherIconUrl","code","require","handleSearch","$emit","getEmojiIcon","type","icon"],"sources":["/Users/romain/Documents/Perso/Dev/weather-app/src/components/HeroHome.vue"],"sourcesContent":["<template>\n  <div>\n    <SearchBar @search=\"handleSearch\"></SearchBar>\n    <div class=\"glass-container\">\n      <div v-if=\"weatherData\" class=\"weather-info\">\n        <h2 class=\"text-2xl  font-semibold text-black mb-4\">{{ weatherData.location.name }}</h2>\n        <div class=\"weather-details sm:flex sm:flex-row items-center mb-4\">\n          <p class=\"text-xl text-white\">{{ weatherData.current.temp_c }}¬∞C</p>\n          <div class=\"flex flex-col items-center mt-2\">\n            <p class=\"text-black mr-4\">\n              Humidity: {{ weatherData.current.humidity }}%\n              <span class=\"emoji-icon\" v-html=\"getEmojiIcon('humidity')\"></span>\n            </p>\n            <p class=\"text-black mr-4\">\n              Wind: {{ weatherData.current.wind_kph }} km/h\n              <span class=\"emoji-icon\" v-html=\"getEmojiIcon('wind')\"></span>\n            </p>\n            <p class=\"text-black mr-4\">\n              Precipitation: {{ weatherData.current.precip_mm }} mm\n              <span class=\"emoji-icon\" v-html=\"getEmojiIcon('precipitation')\"></span>\n            </p>\n            <p class=\"text-black mr-4\">\n              Pressure: {{ weatherData.current.pressure_mb }} mb\n              <span class=\"emoji-icon\" v-html=\"getEmojiIcon('pressure')\"></span>\n            </p>\n            <p class=\"text-black\">\n              UV: {{ weatherData.current.uv }}\n              <span class=\"emoji-icon\" v-html=\"getEmojiIcon('uv')\"></span>\n            </p>\n          </div>\n        </div>\n        <img :src=\"getWeatherIconUrl(weatherData.current.condition.code)\" alt=\"Weather Icon\" class=\"weather-icon\">\n      </div>\n      <div v-else>\n        <p>Loading...</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport WeatherService from '../services/weatherService.js';\nimport SearchBar from './SearchBar.vue';\n\nexport default {\n  components: {\n    SearchBar\n  },\n  data() {\n    return {\n      weatherData: null,\n      city: 'Paris'\n    };\n  },\n  mounted() {\n    this.getWeatherByCity();\n  },\n  methods: {\n    async getWeatherByCity() {\n      try {\n        const response = await WeatherService.getWeatherByCity(this.city);\n        this.weatherData = response.data;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    getWeatherIconUrl(code) {\n      return require(`@/assets/weather-icons/${code}.png`);\n    },\n    handleSearch(city) {\n      this.city = city;\n      this.getWeatherByCity();\n      this.$emit('search', city);\n    },\n    getEmojiIcon(type) {\n      let icon = '';\n      switch (type) {\n        case 'humidity':\n          icon = 'üåßÔ∏è';\n          break;\n        case 'wind':\n          icon = 'üå¨Ô∏è';\n          break;\n        case 'precipitation':\n          icon = 'üí¶';\n          break;\n        case 'pressure':\n          icon = 'üå°Ô∏è';\n          break;\n        case 'uv':\n          icon = '‚òÄÔ∏è';\n          break;\n        default:\n          icon = '';\n      }\n      return icon;\n    }\n  }\n};\n</script>\n\n<style scoped>\n.glass-container {\n  background-color: rgba(255, 255, 255, 0.2);\n  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);\n  border-radius: 10px;\n  border: 1px solid rgba(255, 255, 255, 0.18);\n  padding: 2rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.weather-details {\n\n  width: 100%;\n  max-width: 400px;\n  text-align: center;\n}\n\n.emoji-icon {\n  font-size: 1.5rem;\n}\n\n.weather-icon {\n  margin-top: 2rem;\n  max-width: 100px;\n}\n\n</style>\n"],"mappings":"AAyCA,OAAOA,cAAa,MAAO,+BAA+B;AAC1D,OAAOC,SAAQ,MAAO,iBAAiB;AAEvC,eAAe;EACbC,UAAU,EAAE;IACVD;EACF,CAAC;EACDE,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,IAAI;MACjBC,IAAI,EAAE;IACR,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,gBAAgB,CAAC,CAAC;EACzB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,gBAAgBA,CAAA,EAAG;MACvB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMT,cAAc,CAACO,gBAAgB,CAAC,IAAI,CAACF,IAAI,CAAC;QACjE,IAAI,CAACD,WAAU,GAAIK,QAAQ,CAACN,IAAI;MAClC,EAAE,OAAOO,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IACDE,iBAAiBA,CAACC,IAAI,EAAE;MACtB,OAAOC,OAAO,CAAE,0BAAyBD,IAAK,MAAK,CAAC;IACtD,CAAC;IACDE,YAAYA,CAACV,IAAI,EAAE;MACjB,IAAI,CAACA,IAAG,GAAIA,IAAI;MAChB,IAAI,CAACE,gBAAgB,CAAC,CAAC;MACvB,IAAI,CAACS,KAAK,CAAC,QAAQ,EAAEX,IAAI,CAAC;IAC5B,CAAC;IACDY,YAAYA,CAACC,IAAI,EAAE;MACjB,IAAIC,IAAG,GAAI,EAAE;MACb,QAAQD,IAAI;QACV,KAAK,UAAU;UACbC,IAAG,GAAI,KAAK;UACZ;QACF,KAAK,MAAM;UACTA,IAAG,GAAI,KAAK;UACZ;QACF,KAAK,eAAe;UAClBA,IAAG,GAAI,IAAI;UACX;QACF,KAAK,UAAU;UACbA,IAAG,GAAI,KAAK;UACZ;QACF,KAAK,IAAI;UACPA,IAAG,GAAI,IAAI;UACX;QACF;UACEA,IAAG,GAAI,EAAE;MACb;MACA,OAAOA,IAAI;IACb;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}